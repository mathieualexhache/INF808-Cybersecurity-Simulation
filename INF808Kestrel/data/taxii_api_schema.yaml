openapi: 3.0.3
info:
  title: Arango TAXII Server API
  version: 1.0.0
  description: |2

    Arango TAXII Server is a production ready implementation of a TAXII 2.1 Server designed to work with ArangoDB.
  contact:
    email: noreply@dogesec.com
    url: https://github.com/muchdogesec/arango_taxii_server
paths:
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - json
          - yaml
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - ArangoBasicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/taxii2/:
    get:
      operationId: discover
      description: |2

        This Endpoint provides general information about a TAXII Server, including the advertised API Roots. It's a common entry point for TAXII Clients into the data and services provided by a TAXII Server. For example, clients auto-discovering TAXII Servers via the DNS SRV record will be able to automatically retrieve a discovery response for that server by requesting the `/taxii2/` path on that domain.


        Assuming your authentication details are correct, you will see a HTTP 200 (Success) response. If the API Roots list is empty, it means your user has no access to any API Roots on this server.
      summary: Get information about the TAXII Server and available API Roots
      tags:
      - Taxii API - Server Information
      security:
      - ArangoBasicAuth: []
      responses:
        '200':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/ServerInfo'
          description: ''
        '401':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The client needs to authenticate. If no authorization header
                      is passed then you will receive this error.
                    http_status: '401'
                  summary: example
          description: The client needs to authenticate. If no authorization header
            is passed then you will receive this error.
        '403':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The client does not have access to this resource.
                    http_status: '403'
                  summary: example
          description: The client does not have access to this resource.
        '404':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The Discovery service is not found, or the client does
                      not have access to the resource.
                    http_status: '404'
                  summary: example
          description: The Discovery service is not found, or the client does not
            have access to the resource.
        '406':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: 'The media type provided in the Accept header is invalid.
                      Should be `Accept: application/taxii+json;version=2.1`.'
                    http_status: '406'
                  summary: example
          description: 'The media type provided in the Accept header is invalid. Should
            be `Accept: application/taxii+json;version=2.1`.'
  /api/taxii2/{api_root}/:
    get:
      operationId: api_root_retrieve
      description: |2

        This Endpoint provides general information about an API Root, which can be used to help users and clients decide whether and how they want to interact with it. Multiple API Roots may be hosted on a single TAXII Server. Often, an API Root represents a single trust group.
      summary: Get information about a specific API Root
      parameters:
      - in: path
        name: api_root
        schema:
          type: string
        description: The API Root name. Do not include the full URL. e.g. use `my_api_root`
          NOT `http://127.0.0.1:8000/api/taxii2/my_api_root/`
        required: true
      tags:
      - Taxii API - Server Information
      security:
      - ArangoBasicAuth: []
      responses:
        '200':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/APIRoot'
          description: ''
        '401':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The client needs to authenticate. If no authorization header
                      is passed then you will receive this error.
                    http_status: '401'
                  summary: example
          description: The client needs to authenticate. If no authorization header
            is passed then you will receive this error.
        '403':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The client does not have access to this resource.
                    http_status: '403'
                  summary: example
          description: The client does not have access to this resource.
        '404':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The API Root is not found, or the client does not have
                      access to the resource.
                    http_status: '404'
                  summary: example
          description: The API Root is not found, or the client does not have access
            to the resource.
        '406':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: 'The media type provided in the Accept header is invalid.
                      Should be `Accept: application/taxii+json;version=2.1`.'
                    http_status: '406'
                  summary: example
          description: 'The media type provided in the Accept header is invalid. Should
            be `Accept: application/taxii+json;version=2.1`.'
  /api/taxii2/{api_root}/collections/:
    get:
      operationId: taxii2_collections_list
      description: |2

        This Endpoint provides information about the Collections hosted under this API Root. This is similar to the response to get a Collection, but rather than providing information about one Collection it provides information about all of the Collections. Most importantly, it provides the Collection's id, which is used to request objects or manifest entries from the Collection.
      summary: Get information about all collections
      parameters:
      - in: path
        name: api_root
        schema:
          type: string
        description: The API Root name. Do not include the full URL. e.g. use `my_api_root`
          NOT `http://127.0.0.1:8000/api/taxii2/my_api_root/`
        required: true
      tags:
      - Taxii API - Collections
      security:
      - ArangoBasicAuth: []
      responses:
        '200':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/MultiCollection'
          description: ''
        '400':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The server did not understand the request
                    http_status: '400'
                  summary: example
          description: The server did not understand the request
        '401':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The client needs to authenticate. If no authorization header
                      is passed then you will receive this error.
                    http_status: '401'
                  summary: example
          description: The client needs to authenticate. If no authorization header
            is passed then you will receive this error.
        '403':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The client does not have access to this collections resource.
                    http_status: '403'
                  summary: example
          description: The client does not have access to this collections resource.
        '404':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The API Root is not found, or the client does not have
                      access to the collections resource. If your request fails authentication
                      then you will receive this error.
                    http_status: '404'
                  summary: example
          description: The API Root is not found, or the client does not have access
            to the collections resource. If your request fails authentication then
            you will receive this error.
        '406':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: 'The media type provided in the Accept header is invalid.
                      Should be `Accept: application/taxii+json;version=2.1`.'
                    http_status: '406'
                  summary: example
          description: 'The media type provided in the Accept header is invalid. Should
            be `Accept: application/taxii+json;version=2.1`.'
  /api/taxii2/{api_root}/collections/{collection_id}/:
    get:
      operationId: taxii2_collections_retrieve
      description: |2

        This Endpoint provides general information about a Collection, which can be used to help users and clients decide whether and how they want to interact with it. For example, it will tell clients what it's called and what permissions they have to it.
      summary: Get information about a specific collection
      parameters:
      - in: path
        name: api_root
        schema:
          type: string
        description: The API Root name. Do not include the full URL. e.g. use `my_api_root`
          NOT `http://127.0.0.1:8000/api/taxii2/my_api_root/`
        required: true
      - in: path
        name: collection_id
        schema:
          type: string
        description: The identifier of the Collection being requested. You can get
          a Collection ID from the GET Collections for an API Root endpoint.
        required: true
      tags:
      - Taxii API - Collections
      security:
      - ArangoBasicAuth: []
      responses:
        '200':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/SingleCollection'
          description: ''
        '400':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The server did not understand the request
                    http_status: '400'
                  summary: example
          description: The server did not understand the request
        '401':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The client needs to authenticate. If no authorization header
                      is passed then you will receive this error.
                    http_status: '401'
                  summary: example
          description: The client needs to authenticate. If no authorization header
            is passed then you will receive this error.
        '403':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The client does not have access to this collection resource.
                    http_status: '403'
                  summary: example
          description: The client does not have access to this collection resource.
        '404':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The API Root or Collection ID are not found, or the client
                      does not have access to the collection resource.
                    http_status: '404'
                  summary: example
          description: The API Root or Collection ID are not found, or the client
            does not have access to the collection resource.
        '406':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: 'The media type provided in the Accept header is invalid.
                      Should be `Accept: application/taxii+json;version=2.1`.'
                    http_status: '406'
                  summary: example
          description: 'The media type provided in the Accept header is invalid. Should
            be `Accept: application/taxii+json;version=2.1`.'
  /api/taxii2/{api_root}/collections/{collection_id}/manifest/:
    get:
      operationId: taxii2_collections_manifest_list
      description: |2

        This Endpoint retrieves a manifest about the objects in a Collection. It supports filtering identical to the get objects Endpoint but rather than returning the object itself it returns metadata about the object. It can be used to retrieve metadata to decide whether it's worth retrieving the actual objects.
      summary: Get manifest information about the object in a collection.
      parameters:
      - in: query
        name: added_after
        schema:
          allOf:
          - $ref: https://raw.githubusercontent.com/oasis-open/cti-stix2-json-schemas/v2.0-wd01-r2/schemas/common/timestamp.json#
          - format: timestamp
        description: |2

          A single timestamp that filters objects to only include those objects added after the specified timestamp. This filter considers the `modified` time in an object if exists, else it considers the stix2arango `_record_modified` time. The value of this parameter is a timestamp. In the format `YYYY-MM-DDThh:mm:ss.sssZ`
      - in: path
        name: api_root
        schema:
          type: string
        description: The API Root name. Do not include the full URL. e.g. use `my_api_root`
          NOT `http://127.0.0.1:8000/api/taxii2/my_api_root/`
        required: true
      - in: path
        name: collection_id
        schema:
          type: string
        description: The identifier of the Collection being requested. You can get
          a Collection ID from the GET Collections for an API Root endpoint.
        required: true
      - in: query
        name: limit
        schema:
          type: integer
        description: |2

          A single integer value that indicates the maximum number of objects that the client would like to receive in a single response. The default returned is `50`. `50` is also the maximum number of results that can be returned in any response.
      - in: query
        name: match[id]
        schema:
          type: array
          items:
            allOf:
            - $ref: https://raw.githubusercontent.com/oasis-open/cti-stix2-json-schemas/stix2.1/schemas/common/identifier.json#
            - format: stix-identifier
              example: ipv4-addr--fe91801c-7c35-467c-9254-a9c6bb405afa
          uniqueItems: true
        description: |2

          The identifier of the object(s) that are being requested. This is the STIX `id` of the object, e.g. `indicator--00ee0481-1b16-4c0c-a0e6-43f51d172a81`
        explode: false
        style: form
      - in: query
        name: match[spec_version]
        schema:
          enum:
          - '2.1'
          - '2.0'
        description: The specification version(s) of the STIX object that are being
          requested. Arango TAXII Server only support STIX 2.1, so `2.1` is not only
          the default value but also the only value that can be passed.
        explode: false
        style: form
      - in: query
        name: match[type]
        schema:
          type: array
          items:
            title: type
            type: string
            pattern: ^([a-z][a-z0-9]*)+(-[a-z0-9]+)*\-?$
            minLength: 3
            maxLength: 250
            description: The type property identifies the type of STIX Object (SDO,
              Relationship Object, etc). The value of the type field MUST be one of
              the types defined by a STIX Object (e.g., `indicator`).
            example: ipv6-addr
          uniqueItems: true
        description: |2

          The type of the object(s) that are being requested. This is the STIX `type`, e.g. `attack-pattern`
        explode: false
        style: form
      - in: query
        name: match[version]
        schema:
          type: array
          items:
            type: string
            pattern: last|all|first|^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(\.[0-9]+)?Z$
            format: version
          uniqueItems: true
        description: |2

          The version of the object(s) that are being requested. If no version parameter is provided, the latest version of the object will be returned.

          Valid values for the version parameter are:

          - `last`: requests the latest version of an object. This is the default parameter value.
          - `first`: requests the earliest version of an object
          - `all`: requests all versions of an object
          - `<modified>`: requests a specific version of an object. For example: `2016-01-01T00:00:00.000Z` tells the server to give you the exact STIX object with a
          `modified` time of `2016-01-01T00:00:00.000Z`.

          Note, for objects with a `modified` time, this value will be considered as the version. For objects without a `modified` time, the stix2arango `_record_modified` value will be used to determine version.
        explode: false
        style: form
      - in: query
        name: next
        schema:
          type: string
        description: |2

          A single string value that indicates the next record or set of records in the dataset that the client is requesting. This value can be found in the `next` property of the current response (current page). e.g. `48384495_2024-07-24T09:00:26.609560Z`
      tags:
      - Taxii API - Collections
      security:
      - ArangoBasicAuth: []
      responses:
        '200':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/PaginatedManifestObjectList'
              examples:
                Relationship:
                  value:
                    more: false
                    next: '112121_2'
                    objects:
                    - date_added: '2024-01-16T00:00:00.000Z'
                      id: relationship--da230f89-3019-5016-8b40-695f343988ea
                      media_type: application/stix+json;version=2.1
                      version: '2023-02-28T00:00:00.000Z'
                  summary: relationship
                Attack-pattern:
                  value:
                    more: false
                    next: '112121_2'
                    objects:
                    - date_added: '2024-06-07T16:10:44.168441Z'
                      id: attack-pattern--09b130a2-a77e-4af0-a361-f46f9aad1345
                      media_type: application/stix+json;version=2.1
                      version: '2023-08-14T17:54:22.970Z'
                  summary: attack-pattern
          description: ''
        '400':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The server did not understand the request or filter parameters
                    http_status: '400'
                  summary: example
          description: The server did not understand the request or filter parameters
        '401':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The client needs to authenticate. If no authorization header
                      is passed then you will receive this error.
                    http_status: '401'
                  summary: example
          description: The client needs to authenticate. If no authorization header
            is passed then you will receive this error.
        '403':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The client does not have access to this manifest resource.
                    http_status: '403'
                  summary: example
          description: The client does not have access to this manifest resource.
        '404':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The API Root or Collection ID are not found, or the client
                      does not have access to the manifest resource.
                    http_status: '404'
                  summary: example
          description: The API Root or Collection ID are not found, or the client
            does not have access to the manifest resource.
        '406':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: 'The media type provided in the Accept header is invalid.
                      Should be `Accept: application/taxii+json;version=2.1`.'
                    http_status: '406'
                  summary: example
          description: 'The media type provided in the Accept header is invalid. Should
            be `Accept: application/taxii+json;version=2.1`.'
  /api/taxii2/{api_root}/collections/{collection_id}/objects/:
    get:
      operationId: taxii2_collections_objects_list
      description: |2

        This Endpoint retrieves objects from a Collection. Clients can search for objects in the Collection, retrieve all objects in a Collection, or paginate through objects in the Collection. Pagination is supported by the `limit` URL query parameter and the `more` property of the envelope.
      summary: Get all objects from a collection
      parameters:
      - in: query
        name: added_after
        schema:
          allOf:
          - $ref: https://raw.githubusercontent.com/oasis-open/cti-stix2-json-schemas/v2.0-wd01-r2/schemas/common/timestamp.json#
          - format: timestamp
        description: |2

          A single timestamp that filters objects to only include those objects added after the specified timestamp. This filter considers the `modified` time in an object if exists, else it considers the stix2arango `_record_modified` time. The value of this parameter is a timestamp. In the format `YYYY-MM-DDThh:mm:ss.sssZ`
      - in: path
        name: api_root
        schema:
          type: string
        description: The API Root name. Do not include the full URL. e.g. use `my_api_root`
          NOT `http://127.0.0.1:8000/api/taxii2/my_api_root/`
        required: true
      - in: path
        name: collection_id
        schema:
          type: string
        description: The identifier of the Collection being requested. You can get
          a Collection ID from the GET Collections for an API Root endpoint.
        required: true
      - in: query
        name: limit
        schema:
          type: integer
        description: |2

          A single integer value that indicates the maximum number of objects that the client would like to receive in a single response. The default returned is `50`. `50` is also the maximum number of results that can be returned in any response.
      - in: query
        name: match[id]
        schema:
          type: array
          items:
            allOf:
            - $ref: https://raw.githubusercontent.com/oasis-open/cti-stix2-json-schemas/stix2.1/schemas/common/identifier.json#
            - format: stix-identifier
              example: ipv4-addr--fe91801c-7c35-467c-9254-a9c6bb405afa
          uniqueItems: true
        description: |2

          The identifier of the object(s) that are being requested. This is the STIX `id` of the object, e.g. `indicator--00ee0481-1b16-4c0c-a0e6-43f51d172a81`
        explode: false
        style: form
      - in: query
        name: match[spec_version]
        schema:
          enum:
          - '2.1'
          - '2.0'
        description: The specification version(s) of the STIX object that are being
          requested. Arango TAXII Server only support STIX 2.1, so `2.1` is not only
          the default value but also the only value that can be passed.
        explode: false
        style: form
      - in: query
        name: match[type]
        schema:
          type: array
          items:
            title: type
            type: string
            pattern: ^([a-z][a-z0-9]*)+(-[a-z0-9]+)*\-?$
            minLength: 3
            maxLength: 250
            description: The type property identifies the type of STIX Object (SDO,
              Relationship Object, etc). The value of the type field MUST be one of
              the types defined by a STIX Object (e.g., `indicator`).
            example: ipv6-addr
          uniqueItems: true
        description: |2

          The type of the object(s) that are being requested. This is the STIX `type`, e.g. `attack-pattern`
        explode: false
        style: form
      - in: query
        name: match[version]
        schema:
          type: array
          items:
            type: string
            pattern: last|all|first|^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(\.[0-9]+)?Z$
            format: version
          uniqueItems: true
        description: |2

          The version of the object(s) that are being requested. If no version parameter is provided, the latest version of the object will be returned.

          Valid values for the version parameter are:

          - `last`: requests the latest version of an object. This is the default parameter value.
          - `first`: requests the earliest version of an object
          - `all`: requests all versions of an object
          - `<modified>`: requests a specific version of an object. For example: `2016-01-01T00:00:00.000Z` tells the server to give you the exact STIX object with a
          `modified` time of `2016-01-01T00:00:00.000Z`.

          Note, for objects with a `modified` time, this value will be considered as the version. For objects without a `modified` time, the stix2arango `_record_modified` value will be used to determine version.
        explode: false
        style: form
      - in: query
        name: next
        schema:
          type: string
        description: |2

          A single string value that indicates the next record or set of records in the dataset that the client is requesting. This value can be found in the `next` property of the current response (current page). e.g. `48384495_2024-07-24T09:00:26.609560Z`
      tags:
      - Taxii API - Collections
      security:
      - ArangoBasicAuth: []
      responses:
        '200':
          content:
            application/taxii+json;version=2.1:
              schema:
                type: object
                required:
                - more
                - objects
                properties:
                  more:
                    type: boolean
                    example: false
                  next:
                    type: string
                    example: '112121_2'
                  objects:
                    type: array
                    items:
                      type: object
                      format: stix-object
                      properties:
                        id:
                          allOf:
                          - $ref: https://raw.githubusercontent.com/oasis-open/cti-stix2-json-schemas/stix2.1/schemas/common/identifier.json#
                          - format: stix-identifier
                            example: ipv4-addr--fe91801c-7c35-467c-9254-a9c6bb405afa
                        type:
                          title: type
                          type: string
                          pattern: ^([a-z][a-z0-9]*)+(-[a-z0-9]+)*\-?$
                          minLength: 3
                          maxLength: 250
                          description: The type property identifies the type of STIX
                            Object (SDO, Relationship Object, etc). The value of the
                            type field MUST be one of the types defined by a STIX
                            Object (e.g., `indicator`).
                          example: ipv6-addr
                        created:
                          type: string
                        modified:
                          type: string
                      additionalProperties: true
          description: ''
        '400':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The server did not understand the request or filter parameters
                    http_status: '400'
                  summary: example
          description: The server did not understand the request or filter parameters
        '401':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The client needs to authenticate. If no authorization header
                      is passed then you will receive this error.
                    http_status: '401'
                  summary: example
          description: The client needs to authenticate. If no authorization header
            is passed then you will receive this error.
        '403':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The client does not have access to this objects resource
                    http_status: '403'
                  summary: example
          description: The client does not have access to this objects resource
        '404':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The API Root or Collection ID are not found, or the client
                      does not have access to the objects resource.
                    http_status: '404'
                  summary: example
          description: The API Root or Collection ID are not found, or the client
            does not have access to the objects resource.
        '406':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: 'The media type provided in the Accept header is invalid.
                      Should be `Accept: application/taxii+json;version=2.1`.'
                    http_status: '406'
                  summary: example
          description: 'The media type provided in the Accept header is invalid. Should
            be `Accept: application/taxii+json;version=2.1`.'
    post:
      operationId: taxii2_collections_objects_create
      description: |2

        This Endpoint adds objects to a Collection. Successful responses to this Endpoint will contain a status resource describing the status of the request. The status resource contains an id, which can be used to make requests to the get status Endpoint, a status flag to indicate whether the request is completed or still being processed, and information about the status of the particular objects in the request.
      summary: Add a new object to a specific collection
      parameters:
      - in: path
        name: api_root
        schema:
          type: string
        description: The API Root name. Do not include the full URL. e.g. use `my_api_root`
          NOT `http://127.0.0.1:8000/api/taxii2/my_api_root/`
        required: true
      - in: path
        name: collection_id
        schema:
          type: string
        description: The identifier of the Collection being requested. You can get
          a Collection ID from the GET Collections for an API Root endpoint.
        required: true
      tags:
      - Taxii API - Collections
      requestBody:
        content:
          application/taxii+json;version=2.1:
            schema:
              $ref: '#/components/schemas/Objects'
            examples:
              Example-empty:
                value:
                  objects: []
                summary: example-empty
              Example:
                value:
                  objects:
                  - type: threat-actor
                    spec_version: '2.1'
                    id: threat-actor--dfaa8d77-07e2-4e28-b2c8-92e9f7b04428
                    created: '2014-11-19T23:39:03.893Z'
                    modified: '2014-11-19T23:39:03.893Z'
                    name: Disco Team Threat Actor Group
                    description: This organized threat actor group operates to create
                      profit from all types of crime.
                    threat_actor_types:
                    - crime-syndicate
                    aliases:
                    - Equipo del Discoteca
                    roles:
                    - agent
                    goals:
                    - Steal Credit Card Information
                    sophistication: expert
                    resource_level: organization
                    primary_motivation: personal-gain
                  - type: identity
                    spec_version: '2.1'
                    id: identity--733c5838-34d9-4fbf-949c-62aba761184c
                    created: '2016-08-23T18:05:49.307Z'
                    modified: '2016-08-23T18:05:49.307Z'
                    name: Disco Team
                    description: Disco Team is the name of an organized threat actor
                      crime-syndicate.
                    identity_class: organization
                    contact_information: disco-team@stealthemail.com
                  - type: relationship
                    spec_version: '2.1'
                    id: relationship--a2e3efb5-351d-4d46-97a0-6897ee7c77a0
                    created: '2020-02-29T18:01:28.577Z'
                    modified: '2020-02-29T18:01:28.577Z'
                    relationship_type: attributed-to
                    source_ref: threat-actor--dfaa8d77-07e2-4e28-b2c8-92e9f7b04428
                    target_ref: identity--733c5838-34d9-4fbf-949c-62aba761184c
                summary: example
        required: true
      security:
      - ArangoBasicAuth: []
      responses:
        '200':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiStatus'
          description: ''
        '400':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The server did not understand the request
                    http_status: '400'
                  summary: example
          description: The server did not understand the request
        '401':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The client needs to authenticate. If no authorization header
                      is passed then you will receive this error.
                    http_status: '401'
                  summary: example
          description: The client needs to authenticate. If no authorization header
            is passed then you will receive this error.
        '403':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The client does not have access to write to this objects
                      resource. You should check `can_write` is `true` for this Collection
                      for the authenticated user.
                    http_status: '403'
                  summary: example
          description: The client does not have access to write to this objects resource.
            You should check `can_write` is `true` for this Collection for the authenticated
            user.
        '404':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The API Root or Collection ID are not found, or the client
                      can not write to this objects resource.
                    http_status: '404'
                  summary: example
          description: The API Root or Collection ID are not found, or the client
            can not write to this objects resource.
        '406':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: 'The media type provided in the Accept header is invalid.
                      Should be `Accept: application/taxii+json;version=2.1`.'
                    http_status: '406'
                  summary: example
          description: 'The media type provided in the Accept header is invalid. Should
            be `Accept: application/taxii+json;version=2.1`.'
        '413':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The POSTed payload exceeds the `max_content_length` of
                      the API Root. You can find the `max_content_length` value using
                      the API Root resource.
                    http_status: '413'
                  summary: example
          description: The POSTed payload exceeds the `max_content_length` of the
            API Root. You can find the `max_content_length` value using the API Root
            resource.
        '415':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The client attempted to POST a payload with a content type
                      the server does not support. Arango TAXII Server only supports
                      STIX 2.1.
                    http_status: '415'
                  summary: example
          description: The client attempted to POST a payload with a content type
            the server does not support. Arango TAXII Server only supports STIX 2.1.
        '422':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The object type or version is not supported or could not
                      be processed.
                    http_status: '422'
                  summary: example
          description: The object type or version is not supported or could not be
            processed.
  /api/taxii2/{api_root}/collections/{collection_id}/objects/{object_id}/:
    get:
      operationId: taxii2_collections_objects_retrieve_envelope
      description: |2

        This Endpoint gets an object from a Collection by its id. It can be thought of as a search where the `match[id]` parameter is set to the `object_id` in the path. The `object_id` MUST be the STIX id.
      summary: Get a specific object from a collection
      parameters:
      - in: query
        name: added_after
        schema:
          allOf:
          - $ref: https://raw.githubusercontent.com/oasis-open/cti-stix2-json-schemas/v2.0-wd01-r2/schemas/common/timestamp.json#
          - format: timestamp
        description: |2

          A single timestamp that filters objects to only include those objects added after the specified timestamp. This filter considers the `modified` time in an object if exists, else it considers the stix2arango `_record_modified` time. The value of this parameter is a timestamp. In the format `YYYY-MM-DDThh:mm:ss.sssZ`
      - in: path
        name: api_root
        schema:
          type: string
        description: The API Root name. Do not include the full URL. e.g. use `my_api_root`
          NOT `http://127.0.0.1:8000/api/taxii2/my_api_root/`
        required: true
      - in: path
        name: collection_id
        schema:
          type: string
        description: The identifier of the Collection being requested. You can get
          a Collection ID from the GET Collections for an API Root endpoint.
        required: true
      - in: query
        name: limit
        schema:
          type: integer
        description: |2

          A single integer value that indicates the maximum number of objects that the client would like to receive in a single response. The default returned is `50`. `50` is also the maximum number of results that can be returned in any response.
      - in: query
        name: match[spec_version]
        schema:
          enum:
          - '2.1'
          - '2.0'
        description: The specification version(s) of the STIX object that are being
          requested. Arango TAXII Server only support STIX 2.1, so `2.1` is not only
          the default value but also the only value that can be passed.
        explode: false
        style: form
      - in: query
        name: match[version]
        schema:
          type: array
          items:
            type: string
            pattern: last|all|first|^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(\.[0-9]+)?Z$
            format: version
          uniqueItems: true
        description: |2

          The version of the object(s) that are being requested. If no version parameter is provided, the latest version of the object will be returned.

          Valid values for the version parameter are:

          - `last`: requests the latest version of an object. This is the default parameter value.
          - `first`: requests the earliest version of an object
          - `all`: requests all versions of an object
          - `<modified>`: requests a specific version of an object. For example: `2016-01-01T00:00:00.000Z` tells the server to give you the exact STIX object with a
          `modified` time of `2016-01-01T00:00:00.000Z`.

          Note, for objects with a `modified` time, this value will be considered as the version. For objects without a `modified` time, the stix2arango `_record_modified` value will be used to determine version.
        explode: false
        style: form
      - in: query
        name: next
        schema:
          type: string
        description: |2

          A single string value that indicates the next record or set of records in the dataset that the client is requesting. This value can be found in the `next` property of the current response (current page). e.g. `48384495_2024-07-24T09:00:26.609560Z`
      - in: path
        name: object_id
        schema:
          type: string
        description: The STIX ID of the object being requested. e.g. `indicator--00ee0481-1b16-4c0c-a0e6-43f51d172a81`.
          You can search for objects using the GET objects in a Collection endpoint.
        required: true
      tags:
      - Taxii API - Collections
      security:
      - ArangoBasicAuth: []
      responses:
        '200':
          content:
            application/taxii+json;version=2.1:
              schema:
                type: object
                required:
                - more
                - objects
                properties:
                  more:
                    type: boolean
                    example: false
                  next:
                    type: string
                    example: '112121_2'
                  objects:
                    type: array
                    items:
                      type: object
                      format: stix-object
                      properties:
                        id:
                          allOf:
                          - $ref: https://raw.githubusercontent.com/oasis-open/cti-stix2-json-schemas/stix2.1/schemas/common/identifier.json#
                          - format: stix-identifier
                            example: ipv4-addr--fe91801c-7c35-467c-9254-a9c6bb405afa
                        type:
                          title: type
                          type: string
                          pattern: ^([a-z][a-z0-9]*)+(-[a-z0-9]+)*\-?$
                          minLength: 3
                          maxLength: 250
                          description: The type property identifies the type of STIX
                            Object (SDO, Relationship Object, etc). The value of the
                            type field MUST be one of the types defined by a STIX
                            Object (e.g., `indicator`).
                          example: ipv6-addr
                        created:
                          type: string
                        modified:
                          type: string
                      additionalProperties: true
          description: ''
        '400':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The server did not understand the request or filter parameters.
                    http_status: '400'
                  summary: example
          description: The server did not understand the request or filter parameters.
        '401':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The client needs to authenticate. If no authorization header
                      is passed then you will receive this error.
                    http_status: '401'
                  summary: example
          description: The client needs to authenticate. If no authorization header
            is passed then you will receive this error.
        '403':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The client does not have access to this object resource.
                    http_status: '403'
                  summary: example
          description: The client does not have access to this object resource.
        '404':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The API Root, Collection ID and/or Object ID are not found,
                      or the client does not have access to the object resource.
                    http_status: '404'
                  summary: example
          description: The API Root, Collection ID and/or Object ID are not found,
            or the client does not have access to the object resource.
        '406':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: 'The media type provided in the Accept header is invalid.
                      Should be `Accept: application/taxii+json;version=2.1`.'
                    http_status: '406'
                  summary: example
          description: 'The media type provided in the Accept header is invalid. Should
            be `Accept: application/taxii+json;version=2.1`.'
    delete:
      operationId: taxii2_collections_objects_destroy
      description: |2

        This Endpoint deletes an object from a Collection by its id. The `object_id` MUST be the STIX id. To support removing a particular version of an object, this Endpoint supports filtering. The only valid match parameter is `version`. If no filters are applied, all versions of the object will be deleted.
      summary: Delete a specific object from a collection
      parameters:
      - in: path
        name: api_root
        schema:
          type: string
        description: The API Root name. Do not include the full URL. e.g. use `my_api_root`
          NOT `http://127.0.0.1:8000/api/taxii2/my_api_root/`
        required: true
      - in: path
        name: collection_id
        schema:
          type: string
        description: The identifier of the Collection being requested. You can get
          a Collection ID from the GET Collections for an API Root endpoint.
        required: true
      - in: query
        name: match[spec_version]
        schema:
          enum:
          - '2.1'
          - '2.0'
        description: The specification version(s) of the STIX object that are being
          requested. Arango TAXII Server only support STIX 2.1, so `2.1` is not only
          the default value but also the only value that can be passed.
        explode: false
        style: form
      - in: query
        name: match[version]
        schema:
          type: array
          items:
            type: string
            pattern: last|all|first|^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(\.[0-9]+)?Z$
            format: version
          uniqueItems: true
        description: |2

          The version of the object(s) that are being requested. If no version parameter is provided, the latest version of the object will be returned.

          Valid values for the version parameter are:

          - `last`: requests the latest version of an object. This is the default parameter value.
          - `first`: requests the earliest version of an object
          - `all`: requests all versions of an object
          - `<modified>`: requests a specific version of an object. For example: `2016-01-01T00:00:00.000Z` tells the server to give you the exact STIX object with a
          `modified` time of `2016-01-01T00:00:00.000Z`.

          Note, for objects with a `modified` time, this value will be considered as the version. For objects without a `modified` time, the stix2arango `_record_modified` value will be used to determine version.
        explode: false
        style: form
      - in: path
        name: object_id
        schema:
          type: string
        description: The STIX ID of the object being requested. e.g. `indicator--00ee0481-1b16-4c0c-a0e6-43f51d172a81`.
          You can search for objects using the GET objects in a Collection endpoint.
        required: true
      tags:
      - Taxii API - Collections
      security:
      - ArangoBasicAuth: []
      responses:
        '200':
          content:
            application/taxii+json;version=2.1:
              schema: null
          description: ''
        '400':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The server did not understand the request
                    http_status: '400'
                  summary: example
          description: The server did not understand the request
        '401':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The client needs to authenticate. If no authorization header
                      is passed then you will receive this error.
                    http_status: '401'
                  summary: example
          description: The client needs to authenticate. If no authorization header
            is passed then you will receive this error.
        '403':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The client has access to the object, but not to delete
                      it. You should check `can_write` is `true` for this Collection
                      for the authenticated user.
                    http_status: '403'
                  summary: example
          description: The client has access to the object, but not to delete it.
            You should check `can_write` is `true` for this Collection for the authenticated
            user.
        '404':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The API Root, Collection ID and/or Object ID are not found,
                      or the client does not have access to the object.
                    http_status: '404'
                  summary: example
          description: The API Root, Collection ID and/or Object ID are not found,
            or the client does not have access to the object.
        '406':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: 'The media type provided in the Accept header is invalid.
                      Should be `Accept: application/taxii+json;version=2.1`.'
                    http_status: '406'
                  summary: example
          description: 'The media type provided in the Accept header is invalid. Should
            be `Accept: application/taxii+json;version=2.1`.'
  /api/taxii2/{api_root}/collections/{collection_id}/objects/{object_id}/versions/:
    get:
      operationId: taxii2_collections_objects_versions_list
      description: |2

        This Endpoint retrieves a list of one or more versions of an object in a Collection. This list can be used to decide whether it's worth retrieving the actual objects, or if new versions have been added. If a STIX object is not versioned (and therefore does not have a `modified` timestamp), the server uses the stix2atango `_record_modified` timestamp.
      summary: Get a list of object versions from a collection
      parameters:
      - in: query
        name: added_after
        schema:
          allOf:
          - $ref: https://raw.githubusercontent.com/oasis-open/cti-stix2-json-schemas/v2.0-wd01-r2/schemas/common/timestamp.json#
          - format: timestamp
        description: |2

          A single timestamp that filters objects to only include those objects added after the specified timestamp. This filter considers the `modified` time in an object if exists, else it considers the stix2arango `_record_modified` time. The value of this parameter is a timestamp. In the format `YYYY-MM-DDThh:mm:ss.sssZ`
      - in: path
        name: api_root
        schema:
          type: string
        description: The API Root name. Do not include the full URL. e.g. use `my_api_root`
          NOT `http://127.0.0.1:8000/api/taxii2/my_api_root/`
        required: true
      - in: path
        name: collection_id
        schema:
          type: string
        description: The identifier of the Collection being requested. You can get
          a Collection ID from the GET Collections for an API Root endpoint.
        required: true
      - in: query
        name: limit
        schema:
          type: integer
        description: |2

          A single integer value that indicates the maximum number of objects that the client would like to receive in a single response. The default returned is `50`. `50` is also the maximum number of results that can be returned in any response.
      - in: query
        name: match[spec_version]
        schema:
          enum:
          - '2.1'
          - '2.0'
        description: The specification version(s) of the STIX object that are being
          requested. Arango TAXII Server only support STIX 2.1, so `2.1` is not only
          the default value but also the only value that can be passed.
        explode: false
        style: form
      - in: query
        name: next
        schema:
          type: string
        description: |2

          A single string value that indicates the next record or set of records in the dataset that the client is requesting. This value can be found in the `next` property of the current response (current page). e.g. `48384495_2024-07-24T09:00:26.609560Z`
      - in: path
        name: object_id
        schema:
          type: string
        description: The STIX ID of the object being requested. e.g. `indicator--00ee0481-1b16-4c0c-a0e6-43f51d172a81`.
          You can search for objects using the GET objects in a Collection endpoint.
        required: true
      tags:
      - Taxii API - Collections
      security:
      - ArangoBasicAuth: []
      responses:
        '200':
          content:
            application/taxii+json;version=2.1:
              schema:
                type: object
                required:
                - more
                - versions
                properties:
                  more:
                    type: boolean
                    example: false
                  next:
                    type: string
                    example: '112121_2'
                  versions:
                    type: array
                    items:
                      type: string
                      format: date-time
          description: ''
        '400':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The server did not understand the request or filter parameters
                    http_status: '400'
                  summary: example
          description: The server did not understand the request or filter parameters
        '401':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The client needs to authenticate. If no authorization header
                      is passed then you will receive this error.
                    http_status: '401'
                  summary: example
          description: The client needs to authenticate. If no authorization header
            is passed then you will receive this error.
        '403':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The client does not have access to this versions resource
                    http_status: '403'
                  summary: example
          description: The client does not have access to this versions resource
        '404':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The API Root, Collection ID and/or Object ID are not found,
                      or the client does not have access to the versions resource.
                    http_status: '404'
                  summary: example
          description: The API Root, Collection ID and/or Object ID are not found,
            or the client does not have access to the versions resource.
        '406':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: 'The media type provided in the Accept header is invalid.
                      Should be `Accept: application/taxii+json;version=2.1`.'
                    http_status: '406'
                  summary: example
          description: 'The media type provided in the Accept header is invalid. Should
            be `Accept: application/taxii+json;version=2.1`.'
  /api/taxii2/{api_root}/status/{status_id}/:
    get:
      operationId: taxii2_status_retrieve
      description: |2

        This Endpoint provides information about the status of a previous request. In TAXII 2.1, the only request that can be monitored is one to add objects to a Collection. It is typically used by TAXII Clients to monitor a POST request that they made in order to take action when it is complete.
      summary: Get the status of a job by API root
      parameters:
      - in: path
        name: api_root
        schema:
          type: string
        description: The API Root name. Do not include the full URL. e.g. use `my_api_root`
          NOT `http://127.0.0.1:8000/api/taxii2/my_api_root/`
        required: true
      - in: path
        name: status_id
        schema:
          type: string
          format: uuid
        description: The status ID of the job being requested. The status ID is obtained
          in a successful response from the POST objects endpoint.
        required: true
      tags:
      - Taxii API - Server Information
      security:
      - ArangoBasicAuth: []
      responses:
        '200':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiStatus'
          description: ''
        '401':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The client needs to authenticate. If no authorization header
                      is passed then you will receive this error.
                    http_status: '401'
                  summary: example
          description: The client needs to authenticate. If no authorization header
            is passed then you will receive this error.
        '403':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The client does not have access to this resource.
                    http_status: '403'
                  summary: example
          description: The client does not have access to this resource.
        '404':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: The API Root or Status ID are not found, or the client
                      does not have access to the resource.
                    http_status: '404'
                  summary: example
          description: The API Root or Status ID are not found, or the client does
            not have access to the resource.
        '406':
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/TaxiiError'
              examples:
                Example:
                  value:
                    title: 'The media type provided in the Accept header is invalid.
                      Should be `Accept: application/taxii+json;version=2.1`.'
                    http_status: '406'
                  summary: example
          description: 'The media type provided in the Accept header is invalid. Should
            be `Accept: application/taxii+json;version=2.1`.'
components:
  schemas:
    APIRoot:
      type: object
      properties:
        max_content_length:
          type: integer
          default: 10485760
        title:
          type: string
        versions:
          type: array
          items:
            type: string
          default:
          - application/stix+json;version=2.1
      required:
      - title
    ManifestObject:
      type: object
      properties:
        id:
          type: string
        date_added:
          type: string
          format: date-time
        version:
          type: string
          format: date-time
        media_type:
          type: string
          default: application/stix+json;version=2.1
      required:
      - date_added
      - id
      - version
    MultiCollection:
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/SingleCollection'
      required:
      - collections
    Objects:
      type: object
      properties:
        objects:
          type: array
          items:
            $ref: '#/components/schemas/objects_object'
      required:
      - objects
    PaginatedManifestObjectList:
      type: object
      required:
      - more
      - objects
      properties:
        more:
          type: boolean
          example: false
        next:
          type: string
          example: '112121_2'
        objects:
          type: array
          items:
            $ref: '#/components/schemas/ManifestObject'
    ServerInfo:
      type: object
      properties:
        title:
          type: string
          default: INF808 TAXII Server
        description:
          type: string
          default: A lightweight TAXII API wrapper for ArangoDB
        contact:
          type: string
          format: email
          default: hacm2085@usherbrooke.ca
        api_roots:
          type: array
          items:
            type: string
      required:
      - api_roots
    SingleCollection:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        can_read:
          type: boolean
          default: false
        can_write:
          type: boolean
          default: false
        media_types:
          type: array
          items:
            type: string
          default:
          - application/stix+json;version=2.1
      required:
      - description
      - id
      - title
    TaxiiError:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        error_id:
          type: string
        error_code:
          type: string
        http_status:
          type: string
      required:
      - http_status
      - title
    TaxiiStatus:
      type: object
      properties:
        id:
          type: string
          format: uuid
        status:
          type: string
        total_count:
          type: integer
        success_count:
          type: integer
        successes:
          type: array
          items:
            $ref: '#/components/schemas/TaxxiiStatusObjectField'
        failure_count:
          type: integer
        failures:
          type: array
          items:
            $ref: '#/components/schemas/TaxxiiStatusObjectField'
        pending_count:
          type: integer
        pendings:
          type: array
          items:
            $ref: '#/components/schemas/TaxxiiStatusObjectField'
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        db:
          type: string
          writeOnly: true
        collection:
          type: string
          writeOnly: true
        request_timestamp:
          type: string
          format: date-time
          readOnly: true
      required:
      - id
      - request_timestamp
    TaxxiiStatusObjectField:
      type: object
      properties:
        message:
          type: string
          nullable: true
          maxLength: 256
        version:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
        created:
          type: string
          format: date-time
          writeOnly: true
          nullable: true
        modified:
          type: string
          format: date-time
          writeOnly: true
          nullable: true
      required:
      - id
      - version
    objects_object:
      type: object
      format: stix-object
      properties:
        id:
          allOf:
          - $ref: https://raw.githubusercontent.com/oasis-open/cti-stix2-json-schemas/stix2.1/schemas/common/identifier.json#
          - format: stix-identifier
            example: ipv4-addr--fe91801c-7c35-467c-9254-a9c6bb405afa
        type:
          title: type
          type: string
          pattern: ^([a-z][a-z0-9]*)+(-[a-z0-9]+)*\-?$
          minLength: 3
          maxLength: 250
          description: The type property identifies the type of STIX Object (SDO,
            Relationship Object, etc). The value of the type field MUST be one of
            the types defined by a STIX Object (e.g., `indicator`).
          example: ipv6-addr
        created:
          type: string
        modified:
          type: string
      additionalProperties: true
  securitySchemes:
    ArangoBasicAuth:
      type: http
      scheme: basic
tags:
- name: Taxii API - Server Information
  description: |2

    Information about this TAXII Server, the available API Roots, and to retrieve the status of requests.
- name: Taxii API - Collections
  description: |2

    Collections are hosted in the context of an API Root. Each API Root MAY have zero or more Collections. As with other TAXII Endpoints, the ability of TAXII Clients to read from and write to Collections can be restricted depending on their permissions level.
- name: schema
  description: |2

    Export the TAXII schema to use in other tooling.
